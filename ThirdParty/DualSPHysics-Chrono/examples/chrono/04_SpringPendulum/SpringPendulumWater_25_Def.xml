<?xml version="1.0" encoding="UTF-8" ?>
<case>
    <casedef>
        <constantsdef>
            <gravity x="0" y="0" z="-9.81" comment="Gravitational acceleration" units_comment="m/s^2" />
            <rhop0 value="998.40" comment="Reference density of the fluid" units_comment="kg/m^3" />
            <hswl value="0" auto="true" comment="Maximum still water level to calculate speedofsound using coefsound" units_comment="metres (m)" />
            <gamma value="7" comment="Polytropic constant for water used in the state equation" />
            <speedsystem value="0" auto="true" comment="Maximum system speed (by default the dam-break propagation is used)" />
            <coefsound value="20" comment="Coefficient to multiply speedsystem" />
            <speedsound value="150" auto="true" comment="Speed of sound to use in the simulation (by default speedofsound=coefsound*speedsystem)" />
            <coefh value="1.5" comment="Coefficient to calculate the smoothing length (h=coefh*sqrt(3*dp^2) in 3D)" />
            <cflnumber value="0.2" comment="Coefficient to multiply dt" />
        </constantsdef>
        <mkconfig boundcount="230" fluidcount="9">
            <mkorientfluid mk="0" orient="Xyz" />
        </mkconfig>
        <geometry>
            <predefinition>
                <!-- User-defined variables  -->
                <newvarcte timeMax="10" />
                <newvarcte timeOut="0.05" />
                <newvarcte domainWidth="0.6" _rem="in y direction" />
                <newvarcte sd="0.060" _rem="cube diameter" />
                <newvarcte ndp="25" _rem="Resolution according to sd (sd/dp)" />
                <newvarcte Dp="sd/ndp" Dpm="Dp/2" />
				<newvarcte Lcube="sd-Dp" _rem="cube diameter" />
                <newvarcte tankx="8*sd" tanky="6*sd" />
                <newvarcte hfluid="0.297" _print="1" />
                <newvarcte tankz0="-(hfluid-0.132+0.0839)" />
                <newvarcte rodWidth="0.0235" />
                <newvarcte rodThick="0.002" />
                <newvarcte rodThick_c="0.01" />
            </predefinition>
            <definition dp="#Dp">
                <pointref x="0" y="0" z="0" />
                <pointmin x="#-domainWidth/2" y="#-domainWidth/2" z="#tankz0-10*Dp" />
                <pointmax x="#domainWidth/2" y="#domainWidth/2" z="5" />
            </definition>
            <commands>
                <list name="GeometryForNormals">
                    <setactive drawpoints="0" drawshapes="1" />
                    <setshapemode>actual | bound</setshapemode>
                    <!-- Tank mk=0 -->
                    <setmkbound mk="0" />
                    <setnormalinvert invert="true" />
                    <drawbox>
                        <boxfill>all^top</boxfill>
                        <point x="#-tankx/2" y="#-tanky/2" z="#tankz0" />
                        <size x="#tankx" y="#tanky" z="#hfluid+0.1" />
                        <layers vdp="-0.5" />
                    </drawbox>
                    <setnormalinvert invert="false" />
                    <!-- Rod -->
                    <setmkbound mk="9" />
                    <drawbox>
                        <boxfill>solid</boxfill>
                        <point x="#-rodWidth/2" y="#-rodThick/2" z="0" />
                        <size x="#rodWidth" y="#rodThick" z="0.22" />
                    </drawbox>
                    <shapeout file="rod" />
                    <!-- Cube  -->
                    <setmkbound mk="10" />
                    <rotateline ang="45">
                        <point x="0" y="0" z="0.0" />
                        <point x="0" y="1" z="0.0" />
                    </rotateline>
                    <drawbox>
                        <boxfill>solid</boxfill>
                        <point x="#-Lcube/2" y="#-Lcube/2" z="#-Lcube/2" />
                        <size x="#Lcube" y="#Lcube" z="#Lcube" />
                        <layers vdp="0.5" />
                    </drawbox>
					<matrixreset />
                    <!-- Saves hdp geometry -->
                    <shapeout file="hdp" />
                    <resetdraw />
                </list>
                <mainlist>
                    <runlist name="GeometryForNormals" />
                    <!--Particle generation -->
                    <setshapemode>actual | bound</setshapemode>
                    <setdrawmode mode="full" />
					 <!-- Rod -->
                    <setmkbound mk="9" />
						<drawpoint x="0" y="0" z="0.20" />	
                    <!-- Tank mk=0 -->
                    <setmkbound mk="0" />
                    <drawbox>
                        <boxfill>all^top</boxfill>
                        <point x="#-tankx/2" y="#-tanky/2" z="#tankz0" />
                        <size x="#tankx" y="#tanky" z="#hfluid+0.1" />
                        <layers vdp="0,1,2,3,4" />
                    </drawbox>
                    <_shapeout file="tank" />
                    <!-- Fluid -->
                    <setmkfluid mk="0" />
                    <fillbox x="0" y="0" z="#tankz0+3*Dp">
                        <modefill>void</modefill>
                        <point x="#-tankx" y="#-tanky" z="#tankz0" />
                        <size x="#2*tankx" y="#2*tanky" z="#hfluid" />
                    </fillbox>
					<!-- Remove fluid in cube zone -->
                    <setmkvoid />
                    <rotateline ang="45">
                        <point x="0" y="0" z="0.0" />
                        <point x="0" y="1" z="0.0" />
                    </rotateline>
                    <_setdrawmode mode="solid" />
                    <drawbox>
                        <boxfill>solid</boxfill>
                        <point x="#-Lcube/2" y="#-Lcube/2" z="#-Lcube/2" />
                        <size x="#Lcube" y="#Lcube" z="#Lcube" />
                    </drawbox>
                    <!-- cube -->
                    <setmkbound mk="10" />
                    <setfrdrawmode auto="true" />
                    <drawbox>
                        <boxfill>solid</boxfill>
                        <point x="#-Lcube/2" y="#-Lcube/2" z="#-Lcube/2" />
                        <size x="#Lcube" y="#Lcube" z="#Lcube" />
                    </drawbox>
                    <setfrdrawmode auto="false" />
					<matrixreset />
                </mainlist>
            </commands>
        </geometry>
        <floatings>
            <floating mkbound="10">
                <massbody value="0.2635" />
                <translationDOF x="0" y="0" z="1" comment="Use 0 to restrict Degrees Of Freedon for translation (default=(1,1,1))" />
                <rotationDOF x="0" y="0" z="0" comment="Use 0 to restrict Degrees Of Freedon for rotation (default=(1,1,1))" />
            </floating>
            <floating mkbound="9">
                <massbody value="0.02665" />
                <center x="-4.15216e-19" y="0" z="0.1256" />
                <inertia x="7.98221e-05" y="8.13571e-05" z="1.53504e-06" />
                <!-- <translationDOF x="0" y="0" z="1" comment="Use 0 to restrict Degrees Of Freedon for translation (default=(1,1,1))" /> -->
                <!-- <rotationDOF x="0" y="0" z="0" comment="Use 0 to restrict Degrees Of Freedon for rotation (default=(1,1,1))" /> -->
            </floating>
        </floatings>
        <normals>
            <distanceh value="3.0" comment="Maximum distance (H*distanceh) to compute normals data (default=2)" />
            <ftsupport value="1" comment="Enables support for floating bodies (default=0)" />
            <geometryfile file="[CaseName]_hdp_Actual.vtk" comment="File with boundary geometry (VTK format)" />
        </normals>
    </casedef>
    <execution>
        <special>
            <chrono>
                <savedata value="0.01" comment="Saves CSV with data exchange for each time interval (0=all steps)" />
                <schemescale value="1" comment="Scale used to create the initial scheme of Chrono objects (default=1)" />
                <!-- Enable collisions for chrono -->
                <collision activate="false">
                    <distancedp value="0.01" comment="Allowed collision overlap according Dp (default=0.5)" />
                    <contactmethod value="0" comment="Contact method type. 0:NSC (Non Smooth Contacts), 1:SMC (SMooth Contacts). (default=0)" />
                </collision>
                <!-- Define the bodies for Chrono -->
                <bodyfixed id="floor" mkbound="0" />
                <bodyfloating id="box" mkbound="10" />
                <bodyfloating id="rod" mkbound="9" />
                <link_pointline idbody1="box" idbody2="rod">
                    <slidingvector x="0" y="1" z="0" comment="Sliding vector direction" />
                    <rotpoint x="0" y="0" z="0" comment="Sliding point in the body" />
                    <rotvector x="1" y="0" z="0" comment="Vector direction for rotation, use (0,0,0) for spheric joint (default=(0,0,0))" />
                    <rotvector2 x="0" y="0" z="1" comment="Vector direction for rotation, use (0,0,0) for spheric joint (default=(0,0,0))" />
                    <stiffness value="0" comment="Torsional stiffness [Nm/rad]" />
                    <damping value="0" comment="Torsional damping [Nms/rad]" />
                </link_pointline>
                <link_linearspring idbody1="rod" idbody2="floor">
                    <point_fb1 x="0" y="0.0" z="0.20" comment="Point in body 1" />
                    <point_fb2 x="0" y="0.0" z="0.50" comment="Point in body 2" />
                    <stiffness value="#8.72" comment="Stiffness [N/m]" />
                    <damping value="0.00" comment="Damping [-]" />
                    <rest_length value="0.30" comment="Spring equilibrium length [m]" />
                    <savevtk>
                        <nside value="16" comment="number of sections for each revolution. 0=not saved, 1=line (default=16)" />
                        <radius value="2" comment="spring radius (default=3)" />
                        <length value="2" comment="length for each revolution (default=1)" />
                    </savevtk>
                </link_linearspring>
                <link_hinge idbody1="box" idbody2="rod">
                    <rotpoint x="0.0" y="0.0" z="0.0" comment="Point for rotation" />
                    <rotvector x="1" y="0" z="0" comment="Vector direction for rotation" />
                    <stiffness value="0" comment="Torsional stiffness [Nm/rad]" />
                    <damping value="0" comment="Torsional damping [Nms/rad]" />
                </link_hinge>
            </chrono>
            <damping>
                <dampingzone>
                    <limitmin x="#-tankx/4" y="0" z="0" comment="Location where minimum reduction is applied" />
                    <limitmax x="#-tankx/2" y="0" z="0" comment="Location where maximum reduction is applied" />
                    <overlimit value="0" comment="The scope of maximum reduction over limitmax (def=0)" />
                    <redumax value="10" comment="Maximum reduction in location limitmax (def=10)" />
                    <factorxyz x="1" y="1" z="1" comment="Application factor in components (def x=1,y=1,z=1)" />
                </dampingzone>
                <dampingzone>
                    <limitmin x="#tankx/4" y="0" z="0" comment="Location where minimum reduction is applied" />
                    <limitmax x="#tankx/2" y="0" z="0" comment="Location where maximum reduction is applied" />
                    <overlimit value="0" comment="The scope of maximum reduction over limitmax (def=0)" />
                    <redumax value="10" comment="Maximum reduction in location limitmax (def=10)" />
                    <factorxyz x="1" y="1" z="1" comment="Application factor in components (def x=1,y=1,z=1)" />
                </dampingzone>
                <dampingzone>
                    <limitmin x="0" y="#-tanky/4" z="0" comment="Location where minimum reduction is applied" />
                    <limitmax x="0" y="#-tanky/2" z="0" comment="Location where maximum reduction is applied" />
                    <overlimit value="0" comment="The scope of maximum reduction over limitmax (def=0)" />
                    <redumax value="10" comment="Maximum reduction in location limitmax (def=10)" />
                    <factorxyz x="1" y="1" z="1" comment="Application factor in components (def x=1,y=1,z=1)" />
                </dampingzone>
                <dampingzone>
                    <limitmin x="0" y="#tanky/4" z="0" comment="Location where minimum reduction is applied" />
                    <limitmax x="0" y="#tanky/2" z="0" comment="Location where maximum reduction is applied" />
                    <overlimit value="0" comment="The scope of maximum reduction over limitmax (def=0)" />
                    <redumax value="10" comment="Maximum reduction in location limitmax (def=10)" />
                    <factorxyz x="1" y="1" z="1" comment="Application factor in components (def x=1,y=1,z=1)" />
                </dampingzone>
                <!-- <dampingzone> -->
                <!-- <limitmin x="0" y="0" z="#tankz0+sd" comment="Location where minimum reduction is applied" /> -->
                <!-- <limitmax x="0" y="0" z="#tankz0" comment="Location where maximum reduction is applied" /> -->
                <!-- <overlimit value="0" comment="The scope of maximum reduction over limitmax (def=0)" /> -->
                <!-- <redumax value="10" comment="Maximum reduction in location limitmax (def=10)" /> -->
                <!-- <factorxyz x="1" y="1" z="1" comment="Application factor in components (def x=1,y=1,z=1)" /> -->
                <!-- </dampingzone> -->
            </damping>
            <gauges active="false">
                <default>
                    <computedt value="0.01" comment="Time between measurements. 0:all steps (default=TimeOut)" units_comment="s" />
                    <output value="true" comment="Creates CSV files of measurements (default=false)" />
                    <outputdt value="0.01" comment="Time between output measurements. 0:all steps (default=TimeOut)" units_comment="s" />
                </default>
                <swl name="S0">
                    <pointdp coefdp="0.05" comment="Distance between check points (value=coefdp*Dp)" />
                    <point0 x="-3" y="0" z="-0.5" comment="Initial point" units_comment="m" />
                    <point2 x="-3" y="0" z="1" comment="Final point" units_comment="m" />
                </swl>
            </gauges>
        </special>
        <parameters>        
            <parameter key="Boundary" value="2" comment="Boundary method 1:DBC, 2:mDBC (default=1)" />
            <parameter key="SlipMode" value="1" comment="Slip mode for mDBC 1:DBC vel=0, 2:No-slip, 3:Free slip (default=1)" />
            <parameter key="StepAlgorithm" value="2" comment="Step Algorithm 1:Verlet, 2:Symplectic (default=1)" />
            <parameter key="VerletSteps" value="40" comment="Verlet only: Number of steps to apply Euler timestepping (default=40)" />
            <parameter key="Kernel" value="2" comment="Interaction Kernel 1:Cubic Spline, 2:Wendland (default=2)" />
            <parameter key="ViscoTreatment" value="2" comment="Viscosity formulation 1:Artificial, 2:Laminar+SPS (default=1)" />
            <parameter key="Visco" value="1.18e-6" comment="Viscosity value" /> % Note alpha can depend on the resolution. A value of 0.01 is recommended for near irrotational flows.
            <parameter key="ViscoBoundFactor" value="1" comment="Multiply viscosity value with boundary (default=1)" />
            <parameter key="DensityDT" value="3" comment="Density Diffusion Term 0:None, 1:Molteni, 2:Fourtakas, 3:Fourtakas(full) (default=0)" />
            <parameter key="DensityDTvalue" value="0.1" comment="DDT value (default=0.1)" />
            <parameter key="#Shifting" value="0" comment="Shifting mode 0:None, 1:Ignore bound, 2:Ignore fixed, 3:Full (default=0)" />
            <parameter key="#ShiftCoef" value="-2" comment="Coefficient for shifting computation (default=-2)" />
            <parameter key="#ShiftTFS" value="1.5" comment="Threshold to detect free surface. Typically 1.5 for 2D and 2.75 for 3D (default=0)" />
            <parameter key="RigidAlgorithm" value="3" comment="Rigid Algorithm 0:collision-free, 1:SPH, 2:DEM, 3:Chrono (default=1)" />
            <parameter key="FtPause" value="0.0" comment="Time to freeze the floatings at simulation start (warmup) (default=0)" units_comment="seconds" />
            <parameter key="FtIgnoreRadius" value="1" />
            <parameter key="CoefDtMin" value="0.05" comment="Coefficient to calculate minimum time step dtmin=coefdtmin*h/speedsound (default=0.05)" />
            <parameter key="#DtIni" value="0.0001" comment="Initial time step (default=h/speedsound)" units_comment="seconds" />
            <parameter key="#DtMin" value="0.00001" comment="Minimum time step (default=coefdtmin*h/speedsound)" units_comment="seconds" />
            <parameter key="#DtFixed" value="DtFixed.dat" comment="Dt values are loaded from file (default=disabled)" />
            <parameter key="DtAllParticles" value="0" comment="Velocity of particles used to calculate DT. 1:All, 0:Only fluid/floating (default=0)" />
            <parameter key="TimeMax" value="#timeMax" comment="Time of simulation" units_comment="seconds" />
            <parameter key="TimeOut" value="#timeOut" comment="Time out data" units_comment="seconds" />
            <parameter key="PartsOutMax" value="1" comment="%/100 of fluid particles allowed to be excluded from domain (default=1)" units_comment="decimal" />
            <parameter key="RhopOutMin" value="700" comment="Minimum rhop valid (default=700)" units_comment="kg/m^3" />
            <parameter key="RhopOutMax" value="1300" comment="Maximum rhop valid (default=1300)" units_comment="kg/m^3" />
            <simulationdomain comment="Defines domain of simulation (default=Uses minimun and maximum position of the generated particles)">
                <posmin x="default" y="default" z="default" comment="e.g.: x=0.5, y=default-1, z=default-10%" />
                <posmax x="default" y="default" z="default + 50%" />
            </simulationdomain>
        </parameters>
    </execution>
</case>
